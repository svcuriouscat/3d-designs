// ShapeScript document

/// Surface Mount

//////////////////////////////////////////////////////////////////////////////

detail 89

camera {
    position -17.1347 -27.7823 33.8549
    orientation 0.0097 0.1197 -0.1794
    width 700
    height 575
}

rotate 0  0  -0.5  /// CAD mode

//////////////////////////////////////////////////////////////////////////////

define INCH_IN_MM                        25.399999619  /// mm
define GAP                                0.1  /// mm

/// Fastener
define FASTENER {  /// diameter (mm), identificator (str)
//    3     "M3"
    5.92  "M6"
//    7.88  "M8"
//    6.26  "1/4-20"
}
define FASTENER_DIAMETER                 FASTENER[0]  /// mm

/// Nut
define NUT {  /// width (mm), thickness (mm)
//    0  0
    9.96  5  // M6
}
define NUT_WIDTH                         NUT[0]  /// mm
define NUT_THICKNESS                     NUT[1]  /// mm

/// Washer
define WASHER {  /// diameter (mm), thickness (mm)
    0  0
//    14  0.5
}
define WASHER_DIAMETER                   WASHER[0]  /// mm
define WASHER_THICKNESS                  WASHER[1]  /// mm

/// Surface Mount
define SURFACE_MOUNT_EDGE_RADIUS_RATIO    1.5  /// ratio
define SURFACE_MOUNT_WALL_THICKNESS      (FASTENER_DIAMETER * 0.135)  /// mm
define SURFACE_MOUNT_HEIGHT {  /// mm
    if NUT_THICKNESS > 0 {
        if WASHER_THICKNESS > 0 {
            (NUT_THICKNESS + WASHER_THICKNESS + GAP * 2 + SURFACE_MOUNT_WALL_THICKNESS * 2)
        } else {
            (NUT_THICKNESS + GAP * 2 + SURFACE_MOUNT_WALL_THICKNESS * 2)
        }
    } else {
        /// If no nut present, extrapolate from the diameter of the fastener
        (FASTENER_DIAMETER + SURFACE_MOUNT_WALL_THICKNESS * 2)
    }
}
define SURFACE_MOUNT_WIDTH {  /// mm
    if WASHER_DIAMETER > 0 {
        (WASHER_DIAMETER + GAP * 2 + SURFACE_MOUNT_HEIGHT * SURFACE_MOUNT_EDGE_RADIUS_RATIO * 2)
    } else {
        if NUT_WIDTH > 0 {
            (NUT_WIDTH * 1.155 + GAP * 2 + SURFACE_MOUNT_HEIGHT * SURFACE_MOUNT_EDGE_RADIUS_RATIO * 2)
        } else {
            (FASTENER_DIAMETER + GAP * 2 + SURFACE_MOUNT_WALL_THICKNESS * 2 + SURFACE_MOUNT_HEIGHT * SURFACE_MOUNT_EDGE_RADIUS_RATIO * 2)
        }
    }
}

//////////////////////////////////////////////////////////////////////////////

define NUT_SURFACE_MOUNT {
    difference {
        union {
            /// Meat for the fastener (nut, washer)
            cylinder {
                size (SURFACE_MOUNT_WIDTH - SURFACE_MOUNT_HEIGHT * SURFACE_MOUNT_EDGE_RADIUS_RATIO * 2)  (SURFACE_MOUNT_HEIGHT)
            }

            /// Top part of the rounded edge
            if SURFACE_MOUNT_EDGE_RADIUS_RATIO > 0 {
                intersection {
                    extrude {
                        circle {
                            size (SURFACE_MOUNT_HEIGHT * SURFACE_MOUNT_EDGE_RADIUS_RATIO * 2)  (SURFACE_MOUNT_HEIGHT * 7)
                        }
                        along circle {
                            size (SURFACE_MOUNT_WIDTH - SURFACE_MOUNT_HEIGHT * SURFACE_MOUNT_EDGE_RADIUS_RATIO * 2)
                            orientation 0  0  0.5
                        }

                        position 0  -(SURFACE_MOUNT_HEIGHT * 7 / 2 - SURFACE_MOUNT_HEIGHT / 2)
                    }

                    cube {
                        size SURFACE_MOUNT_WIDTH  (SURFACE_MOUNT_HEIGHT / 2)
                        position 0  (SURFACE_MOUNT_HEIGHT / 4)
                    }
                }
            }

            /// Meat for the rounded edge
            if SURFACE_MOUNT_EDGE_RADIUS_RATIO > 0 {
                cylinder {
                    size (SURFACE_MOUNT_WIDTH)  (SURFACE_MOUNT_HEIGHT / 2)
                    position 0  -(SURFACE_MOUNT_HEIGHT / 2 / 2)
                }
            }
        }

        union {
            /// Cut out for the fastener
            cylinder {
                size (FASTENER_DIAMETER)  (SURFACE_MOUNT_HEIGHT - SURFACE_MOUNT_WALL_THICKNESS)
                position 0  (SURFACE_MOUNT_WALL_THICKNESS / 2)
            }

            /// Cut out for the nut
            if NUT_WIDTH > 0 and NUT_THICKNESS > 0 {
                cylinder {
                    detail 6
                    size (NUT_WIDTH * (1.155) + GAP * 2)  (NUT_THICKNESS + GAP * 2)
                    position 0  -(WASHER_THICKNESS / 2)
                }
            }

            /// Cut out for the washer
            if WASHER_DIAMETER > 0 and WASHER_THICKNESS > 0 {
                cylinder {
                    size (WASHER_DIAMETER + GAP * 2)  (WASHER_THICKNESS + GAP)
                    position 0  (WASHER_THICKNESS / 2 + SURFACE_MOUNT_HEIGHT / 2 - WASHER_THICKNESS - SURFACE_MOUNT_WALL_THICKNESS - GAP / 2)
                }
            }

            /// Cut out for the bottom part of the rounded edge
            if SURFACE_MOUNT_EDGE_RADIUS_RATIO > 0 {
                extrude {
                    circle {
                        size (SURFACE_MOUNT_HEIGHT * SURFACE_MOUNT_EDGE_RADIUS_RATIO * 1.33)  (SURFACE_MOUNT_HEIGHT * 3)
                    }
                    along circle {
                        size (SURFACE_MOUNT_WIDTH)
                        orientation 0  0  0.5
                    }

                    position 0  (SURFACE_MOUNT_HEIGHT * 3 / 2 - SURFACE_MOUNT_HEIGHT / 2)
                }
            }
        }
    }
}

//////////////////////////////////////////////////////////////////////////////

NUT_SURFACE_MOUNT {
    opacity 0.5
}

/// Ghosts
if not true {
    group {
        opacity 0.5

        if NUT_WIDTH > 0 and NUT_THICKNESS > 0 {
            difference {
                color blue

                cylinder {
                    detail 6
                    size (NUT_WIDTH * 1.155)  (NUT_THICKNESS)
                }

                cylinder {
                    detail (detail / 2)
                    size (FASTENER_DIAMETER)  (NUT_THICKNESS)
                }

                position 0  -(WASHER_THICKNESS / 2)
            }
        }

        if WASHER_DIAMETER > 0 and WASHER_THICKNESS > 0 {
            difference {
                color green

                cylinder {
                    detail (detail / 2)
                    size (WASHER_DIAMETER)  (WASHER_THICKNESS)
                }

                cylinder {
                    detail (detail / 2)
                    size (FASTENER_DIAMETER)  (WASHER_THICKNESS)
                }

                position 0  (WASHER_THICKNESS / 2 + SURFACE_MOUNT_HEIGHT / 2 - WASHER_THICKNESS - SURFACE_MOUNT_WALL_THICKNESS - GAP)
            }
        }
    }
}

//////////////////////////////////////////////////////////////////////////////

print "[MODEL] detail: " (detail)

print ""
print "[FASTENER] fastener: " FASTENER[1]
print "[FASTENER] fastener diameter: " FASTENER_DIAMETER "mm"

if NUT_THICKNESS > 0 {
    print ""
    print "[NUT] width: " NUT_WIDTH "mm"
    print "[NUT] thickness: " NUT_THICKNESS "mm"
}

if WASHER_DIAMETER > 0 and WASHER_THICKNESS > 0 {
    print ""
    print "[WASHER] diameter: " WASHER_DIAMETER "mm"
    print "[WASHER] thickness: " WASHER_THICKNESS "mm"
}

print ""
print "[SURFACE MOUNT] width: " SURFACE_MOUNT_WIDTH "mm"
print "[SURFACE MOUNT] height: " SURFACE_MOUNT_HEIGHT "mm"
print "[SURFACE MOUNT] wall thickness: " SURFACE_MOUNT_WALL_THICKNESS "mm"

